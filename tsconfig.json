{
  "compilerOptions": {
    /* 基础选项 */
    "target": "es2017" /* 指定 ECMAScript 目标版本 */,
    "module": "esnext" /* 指定模块代码生成 */,
    "lib": ["dom", "dom.iterable", "esnext"] /* 指定要包含在编译中的库文件 */,
    "jsx": "react" /* 指定 JSX 代码生成 */,
    "declaration": true /* 生成相应的 '.d.ts' 文件 */,
    "declarationMap": true /* 为每个对应的 '.d.ts' 文件生成一个源映射 */,
    "sourceMap": true /* 生成相应的 '.map' 文件 */,
    "outDir": "./es" /* 将输出结构重定向到目录 */,

    /* 严格类型检查选项 */
    "strict": true /* 启用所有严格类型检查选项 */,
    "noImplicitAny": false /* 在表达式和声明上有隐含的 'any' 类型时报错 */,
    "strictNullChecks": true /* 启用严格的 null 检查 */,
    "strictFunctionTypes": true /* 启用函数类型的严格检查 */,
    "strictBindCallApply": true /* 启用函数上的严格 'bind', 'call', 和 'apply' 方法 */,
    "strictPropertyInitialization": true /* 启用类中属性初始化的严格检查 */,

    /* 额外检查 */
    "noUnusedLocals": true /* 报告未使用的局部变量的错误 */,
    "noUnusedParameters": true /* 报告未使用的参数的错误 */,
    "noImplicitReturns": true /* 当函数中不是所有代码路径都返回值时报告错误 */,
    "noFallthroughCasesInSwitch": true /* 报告 switch 语句中的 fallthrough 错误 */,

    /* 模块解析选项 */
    "moduleResolution": "node" /* 指定模块解析策略 */,
    "baseUrl": "./" /* 用于解析非相对模块名称的基目录 */,
    "paths": {
      "common-mid": ["./src"] /* 重新映射导入位置的条目 */,
      "common-mid/*": ["./src/*"]
    },
    "esModuleInterop": true /* 通过为所有导入创建命名空间对象，启用 CommonJS 和 ES 模块之间的互操作性 */,
    "allowSyntheticDefaultImports": true /* 允许从没有默认导出的模块中默认导入 */,

    /* 源映射选项 */
    "inlineSources": true /* 将源代码与源映射一起发出到单个文件中 */,

    /* 实验性选项 */
    "experimentalDecorators": true /* 启用对 ES7 装饰器的实验性支持 */,
    "emitDecoratorMetadata": true /* 为装饰器发出类型元数据 */,

    /* 高级选项 */
    "skipLibCheck": true /* 跳过声明文件的类型检查 */,
    "forceConsistentCasingInFileNames": true /* 禁止对同一文件的不一致引用 */,
    "resolveJsonModule": true /* 允许导入 .json 文件 */,
    "isolatedModules": true /* 将每个文件作为单独的模块转译 */
  },
  "include": ["./src"],
  "exclude": ["node_modules", "es", "**/test", "src/_testComponent", "examples"]
}
